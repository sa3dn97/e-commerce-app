{"version":3,"file":"ngx-bootstrap-pagination.umd.js","sources":["ng://ngx-bootstrap/pagination/pagination.config.ts","ng://ngx-bootstrap/pagination/pager.component.ts","ng://ngx-bootstrap/pagination/pager.component.html","ng://ngx-bootstrap/pagination/pagination.component.html","ng://ngx-bootstrap/pagination/pagination.component.ts","ng://ngx-bootstrap/pagination/pagination.module.ts"],"sourcesContent":["// todo: split\nimport { Injectable } from '@angular/core';\n\nimport { ConfigModel, PagerModel } from './models';\n\n/** Provides default values for Pagination and pager components */\n@Injectable()\nexport class PaginationConfig {\n  main: ConfigModel = {\n    maxSize: void 0,\n    itemsPerPage: 10,\n    boundaryLinks: false,\n    directionLinks: true,\n    firstText: 'First',\n    previousText: 'Previous',\n    nextText: 'Next',\n    lastText: 'Last',\n    pageBtnClass: '',\n    rotate: true\n  };\n  pager: PagerModel = {\n    itemsPerPage: 15,\n    previousText: 'Â« Previous',\n    nextText: 'Next Â»',\n    pageBtnClass: '',\n    align: true\n  };\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  Provider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PageChangedEvent } from './pagination.component';\nimport { PaginationConfig } from './pagination.config';\n\nimport { ConfigModel, PagesModel } from './models';\n\nexport const PAGER_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => PagerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'pager',\n  templateUrl: './pager.component.html',\n  providers: [PAGER_CONTROL_VALUE_ACCESSOR]\n})\nexport class PagerComponent implements ControlValueAccessor, OnInit {\n  config: ConfigModel;\n  /** if `true` aligns each link to the sides of pager */\n  @Input() align: boolean;\n  /** limit number for page links in pager */\n  @Input() maxSize: number;\n  /** if false first and last buttons will be hidden */\n  @Input() boundaryLinks: boolean;\n  /** if false previous and next buttons will be hidden */\n  @Input() directionLinks: boolean;\n  // labels\n  /** first button text */\n  @Input() firstText: string;\n  /** previous button text */\n  @Input() previousText: string;\n  /** next button text */\n  @Input() nextText: string;\n  /** last button text */\n  @Input() lastText: string;\n  /** if true current page will in the middle of pages list */\n  @Input() rotate: boolean;\n  // css\n  /** add class to <code><li\\></code> */\n  @Input() pageBtnClass: string;\n\n  /** if true pagination component will be disabled */\n  @Input() disabled: boolean;\n\n  /** fired when total pages count changes, $event:number equals to total pages count */\n  @Output() numPages: EventEmitter<number> = new EventEmitter<number>();\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to\n   * object with current page index and number of items per page\n   */\n  @Output()\n  pageChanged: EventEmitter<PageChangedEvent> = new EventEmitter<PageChangedEvent>();\n\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  @Input()\n  get itemsPerPage(): number {\n    return this._itemsPerPage;\n  }\n\n  set itemsPerPage(v: number) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  /** total number of items in all pages */\n  @Input()\n  get totalItems(): number {\n    return this._totalItems;\n  }\n\n  set totalItems(v: number) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  get totalPages(): number {\n    return this._totalPages;\n  }\n\n  set totalPages(v: number) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n\n  set page(value: number) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  classMap: string;\n  pages: PagesModel[];\n\n  protected _itemsPerPage: number;\n  protected _totalItems: number;\n  protected _totalPages: number;\n  protected inited = false;\n  protected _page = 1;\n\n  constructor(private elementRef: ElementRef,\n              paginationConfig: PaginationConfig,\n              private changeDetection: ChangeDetectorRef) {\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(\n        Object.assign({}, paginationConfig.main, paginationConfig.pager)\n      );\n    }\n  }\n\n  configureOptions(config: ConfigModel): void {\n    this.config = Object.assign({}, config);\n  }\n\n  ngOnInit(): void {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    this.maxSize =\n      typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n    this.rotate =\n      typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n    this.boundaryLinks =\n      typeof this.boundaryLinks !== 'undefined'\n        ? this.boundaryLinks\n        : this.config.boundaryLinks;\n    this.directionLinks =\n      typeof this.directionLinks !== 'undefined'\n        ? this.directionLinks\n        : this.config.directionLinks;\n    this.pageBtnClass =\n      typeof this.pageBtnClass !== 'undefined'\n        ? this.pageBtnClass\n        : this.config.pageBtnClass;\n\n    // base class\n    this.itemsPerPage =\n      typeof this.itemsPerPage !== 'undefined'\n        ? this.itemsPerPage\n        : this.config.itemsPerPage;\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n\n  writeValue(value: number): void {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n\n  getText(key: string): string {\n    // tslint:disable-next-line:no-any\n    return (this as any)[`${key}Text`] || (this as any).config[`${key}Text`];\n  }\n\n  noPrevious(): boolean {\n    return this.page === 1;\n  }\n\n  noNext(): boolean {\n    return this.page === this.totalPages;\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  selectPage(page: number, event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (!this.disabled) {\n      if (event && event.target) {\n        // tslint:disable-next-line:no-any\n        const target: any = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n\n  // Create page object used in template\n  protected makePage(num: number,\n                     text: string,\n                     active: boolean): { number: number; text: string; active: boolean } {\n    return {text, number: num, active};\n  }\n\n  protected getPages(currentPage: number, totalPages: number): PagesModel[] {\n    const pages: PagesModel[] = [];\n\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized =\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n\n    // recompute if maxSize\n    if (isMaxSized) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage =\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n\n    return pages;\n  }\n\n  // base class\n  protected calculateTotalPages(): number {\n    const totalPages =\n      this.itemsPerPage < 1\n        ? 1\n        : Math.ceil(this.totalItems / this.itemsPerPage);\n\n    return Math.max(totalPages || 0, 1);\n  }\n}\n","<ul class=\"pager\">\n  <li [class.disabled]=\"noPrevious()\" [class.previous]=\"align\"\n      [ngClass]=\"{'pull-left': align, 'float-left': align}\"\n      class=\"{{ pageBtnClass }}\">\n    <a href (click)=\"selectPage(page - 1, $event)\">{{ getText('previous') }}</a>\n  </li>\n  <li [class.disabled]=\"noNext()\" [class.next]=\"align\"\n      [ngClass]=\"{'pull-right': align, 'float-right': align}\"\n      class=\"{{ pageBtnClass }}\">\n    <a href (click)=\"selectPage(page + 1, $event)\">{{ getText('next') }}</a>\n  </li>\n</ul>\n","<ul class=\"pagination\" [ngClass]=\"classMap\">\n  <li class=\"pagination-first page-item\"\n      *ngIf=\"boundaryLinks\"\n      [class.disabled]=\"noPrevious() || disabled\">\n    <a class=\"page-link\" href (click)=\"selectPage(1, $event)\">\n      <ng-container [ngTemplateOutlet]=\"customFirstTemplate || defaultFirstTemplate\"\n                   [ngTemplateOutletContext]=\"{disabled: noPrevious() || disabled, currentPage: page}\">\n      </ng-container>\n    </a>\n  </li>\n\n  <li class=\"pagination-prev page-item\"\n      *ngIf=\"directionLinks\"\n      [class.disabled]=\"noPrevious() || disabled\">\n    <a class=\"page-link\" href (click)=\"selectPage(page - 1, $event)\">\n      <ng-container [ngTemplateOutlet]=\"customPreviousTemplate || defaultPreviousTemplate\"\n                   [ngTemplateOutletContext]=\"{disabled: noPrevious() || disabled, currentPage: page}\">\n      </ng-container>\n    </a>\n  </li>\n\n  <li *ngFor=\"let pg of pages\"\n      [class.active]=\"pg.active\"\n      [class.disabled]=\"disabled && !pg.active\"\n      class=\"pagination-page page-item\">\n    <a class=\"page-link\" href (click)=\"selectPage(pg.number, $event)\">\n      <ng-container [ngTemplateOutlet]=\"customPageTemplate || defaultPageTemplate\"\n                   [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pg, currentPage: page}\">\n      </ng-container>\n    </a>\n  </li>\n\n  <li class=\"pagination-next page-item\"\n      *ngIf=\"directionLinks\"\n      [class.disabled]=\"noNext() || disabled\">\n    <a class=\"page-link\" href (click)=\"selectPage(page + 1, $event)\">\n      <ng-container [ngTemplateOutlet]=\"customNextTemplate || defaultNextTemplate\"\n                   [ngTemplateOutletContext]=\"{disabled: noNext() || disabled, currentPage: page}\">\n      </ng-container>\n    </a>\n  </li>\n\n  <li class=\"pagination-last page-item\"\n      *ngIf=\"boundaryLinks\"\n      [class.disabled]=\"noNext() || disabled\">\n    <a class=\"page-link\" href (click)=\"selectPage(totalPages, $event)\">\n      <ng-container [ngTemplateOutlet]=\"customLastTemplate || defaultLastTemplate\"\n                   [ngTemplateOutletContext]=\"{disabled: noNext() || disabled, currentPage: page}\">\n      </ng-container>\n    </a>\n  </li>\n</ul>\n\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\n\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\n\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\n\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\n\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  Provider, TemplateRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PaginationConfig } from './pagination.config';\nimport { ConfigModel, PagesModel, PaginationLinkContext, PaginationNumberLinkContext } from './models';\n\nexport interface PageChangedEvent {\n  itemsPerPage: number;\n  page: number;\n}\n\nexport const PAGINATION_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => PaginationComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'pagination',\n  templateUrl: './pagination.component.html',\n  providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\n})\nexport class PaginationComponent implements ControlValueAccessor, OnInit {\n  config: ConfigModel;\n  /** if `true` aligns each link to the sides of pager */\n  @Input() align: boolean;\n  /** limit number for page links in pager */\n  @Input() maxSize: number;\n  /** if false first and last buttons will be hidden */\n  @Input() boundaryLinks: boolean;\n  /** if false previous and next buttons will be hidden */\n  @Input() directionLinks: boolean;\n  // labels\n  /** first button text */\n  @Input() firstText: string;\n  /** previous button text */\n  @Input() previousText: string;\n  /** next button text */\n  @Input() nextText: string;\n  /** last button text */\n  @Input() lastText: string;\n  /** if true current page will in the middle of pages list */\n  @Input() rotate: boolean;\n  // css\n  /** add class to <code><li\\></code> */\n  @Input() pageBtnClass: string;\n  /** if true pagination component will be disabled */\n  @Input() disabled: boolean;\n  /** custom template for page link */\n  @Input() customPageTemplate: TemplateRef<PaginationNumberLinkContext>;\n  /** custom template for next link */\n  @Input() customNextTemplate: TemplateRef<PaginationLinkContext>;\n  /** custom template for previous link */\n  @Input() customPreviousTemplate: TemplateRef<PaginationLinkContext>;\n  /** custom template for first link */\n  @Input() customFirstTemplate: TemplateRef<PaginationLinkContext>;\n  /** custom template for last link */\n  @Input() customLastTemplate: TemplateRef<PaginationLinkContext>;\n\n  /** fired when total pages count changes, $event:number equals to total pages count */\n  @Output() numPages: EventEmitter<number> = new EventEmitter<number>();\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to object\n   * with current page index and number of items per page\n   */\n  @Output()\n  pageChanged = new EventEmitter<PageChangedEvent>();\n\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  @Input()\n  get itemsPerPage(): number {\n    return this._itemsPerPage;\n  }\n\n  set itemsPerPage(v: number) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  /** total number of items in all pages */\n  @Input()\n  get totalItems(): number {\n    return this._totalItems;\n  }\n\n  set totalItems(v: number) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  get totalPages(): number {\n    return this._totalPages;\n  }\n\n  set totalPages(v: number) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n\n  set page(value: number) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  classMap: string;\n  pages: PagesModel[];\n\n  protected _itemsPerPage: number;\n  protected _totalItems: number;\n  protected _totalPages: number;\n  protected inited = false;\n  protected _page = 1;\n\n  constructor(\n    private elementRef: ElementRef,\n    paginationConfig: PaginationConfig,\n    private changeDetection: ChangeDetectorRef\n  ) {\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(paginationConfig.main);\n    }\n  }\n\n  configureOptions(config: ConfigModel): void {\n    this.config = Object.assign({}, config);\n  }\n\n  ngOnInit(): void {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    this.maxSize =\n      typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n    this.rotate =\n      typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n    this.boundaryLinks =\n      typeof this.boundaryLinks !== 'undefined'\n        ? this.boundaryLinks\n        : this.config.boundaryLinks;\n    this.directionLinks =\n      typeof this.directionLinks !== 'undefined'\n        ? this.directionLinks\n        : this.config.directionLinks;\n    this.pageBtnClass =\n      typeof this.pageBtnClass !== 'undefined'\n        ? this.pageBtnClass\n        : this.config.pageBtnClass;\n\n    // base class\n    this.itemsPerPage =\n      typeof this.itemsPerPage !== 'undefined'\n        ? this.itemsPerPage\n        : this.config.itemsPerPage;\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n\n  writeValue(value: number): void {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n\n  getText(key: string): string {\n    // tslint:disable-next-line:no-any\n    return (this as any)[`${key}Text`] || (this as any).config[`${key}Text`];\n  }\n\n  noPrevious(): boolean {\n    return this.page === 1;\n  }\n\n  noNext(): boolean {\n    return this.page === this.totalPages;\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  selectPage(page: number, event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (!this.disabled) {\n      if (event && event.target) {\n        // tslint:disable-next-line:no-any\n        const target: any = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n\n  // Create page object used in template\n  protected makePage(\n    num: number,\n    text: string,\n    active: boolean\n  ): { number: number; text: string; active: boolean } {\n    return { text, number: num, active };\n  }\n\n  protected getPages(currentPage: number, totalPages: number): PagesModel[] {\n    const pages: PagesModel[] = [];\n\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized =\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n\n    // recompute if maxSize\n    if (isMaxSized) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage =\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n\n    return pages;\n  }\n\n  // base class\n  protected calculateTotalPages(): number {\n    const totalPages =\n      this.itemsPerPage < 1\n        ? 1\n        : Math.ceil(this.totalItems / this.itemsPerPage);\n\n    return Math.max(totalPages || 0, 1);\n  }\n// tslint:disable-next-line:max-file-line-count\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { PaginationConfig } from './pagination.config';\n\nimport { PagerComponent } from './pager.component';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PagerComponent, PaginationComponent],\n  exports: [PagerComponent, PaginationComponent]\n})\nexport class PaginationModule {\n  static forRoot(): ModuleWithProviders<PaginationModule> {\n    return { ngModule: PaginationModule, providers: [PaginationConfig] };\n  }\n}\n"],"names":["Injectable","NG_VALUE_ACCESSOR","forwardRef","EventEmitter","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵclassMap","i0.ɵɵclassProp","i0.ɵɵproperty","i0.ɵɵtextInterpolate","Component","Input","Output","i0.ɵɵelementContainer","i0.ɵɵtemplate","CommonModule","NgModule"],"mappings":"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"}