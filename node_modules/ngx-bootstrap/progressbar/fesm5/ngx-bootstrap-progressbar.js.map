{"version":3,"file":"ngx-bootstrap-progressbar.js","sources":["ng://ngx-bootstrap/progressbar/progressbar.config.ts","ng://ngx-bootstrap/progressbar/progressbar.component.html","ng://ngx-bootstrap/progressbar/progressbar.component.ts","ng://ngx-bootstrap/progressbar/bar.component.ts","ng://ngx-bootstrap/progressbar/bar.component.html","ng://ngx-bootstrap/progressbar/progressbar.module.ts","ng://ngx-bootstrap/progressbar/ngx-bootstrap-progressbar.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ProgressbarConfig {\n  /** if `true` changing value of progress bar will be animated */\n  animate: Boolean = false;\n  /** maximum total value of progress element */\n  max = 100;\n}\n","<bar [type]=\"type\" [value]=\"_value\" *ngIf=\"!isStacked\">\n  <ng-content></ng-content>\n</bar>\n<ng-template [ngIf]=\"isStacked\">\n  <bar *ngFor=\"let item of _value\" [type]=\"item.type\" [value]=\"item.value\">{{ item.label }}</bar>\n</ng-template>\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { ProgressbarConfig } from './progressbar.config';\nimport { ProgressbarType } from './progressbar-type.interface';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { BarComponent } from './bar.component';\n\n@Component({\n  selector: 'progressbar',\n  templateUrl: './progressbar.component.html',\n  styles: [\n    `\n    :host {\n      width: 100%;\n      display: flex;\n    }\n  `\n  ]\n})\nexport class ProgressbarComponent {\n  /** if `true` changing value of progress bar will be animated */\n  @Input()\n  set animate(value: boolean) {\n    this._animate = value;\n    this.bars.forEach((b: BarComponent) => {\n      b.animate = value;\n    });\n  }\n  /** If `true`, striped classes are applied */\n  @Input()\n  set striped(value: boolean) {\n    this._striped = value;\n    this.bars.forEach((b: BarComponent) => {\n      b.striped = value;\n    });\n  }\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type: ProgressbarType;\n  /** current value of progress bar. Could be a number or array of objects\n   * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n   */\n  @Input()\n  /* tslint:disable-next-line:no-any */\n  set value(value: number | any[]) {\n    this.isStacked = Array.isArray(value);\n    this._value = value;\n  }\n  isStacked = false;\n  _striped: boolean;\n  _animate: boolean;\n  /* tslint:disable-next-line:no-any */\n  _value: number | any[];\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  /** maximum total value of progress element */\n  @HostBinding('attr.max')\n  @Input()\n  get max(): number {\n    return this._max;\n  }\n\n  set max(v: number) {\n    this._max = v;\n    this.bars.forEach((bar: BarComponent) => {\n      bar.recalculatePercentage();\n    });\n  }\n\n  @HostBinding('class.progress') addClass = true;\n\n  /* tslint:disable-next-line:no-any */\n  bars: BarComponent[] = [];\n\n  protected _max = 100;\n\n  constructor(config: ProgressbarConfig) {\n    Object.assign(this, config);\n  }\n  addBar(bar: BarComponent): void {\n    bar.animate = this._animate;\n    bar.striped = this._striped;\n\n    this.bars.push(bar);\n  }\n\n  removeBar(bar: BarComponent): void {\n    this.bars.splice(this.bars.indexOf(bar), 1);\n  }\n}\n","import {\n  Component,\n  Host,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\n\nimport { ProgressbarComponent } from './progressbar.component';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n// todo: number pipe\n// todo: use query from progress?\n@Component({\n  selector: 'bar',\n  templateUrl: './bar.component.html',\n  host: {\n    role: 'progressbar',\n    'aria-valuemin': '0',\n    '[class.progress-bar-animated]': '!isBs3 && animate',\n    '[class.progress-bar-striped]': 'striped',\n    '[class.active]': 'isBs3 && animate',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n    '[attr.aria-valuemax]': 'max',\n    '[style.height.%]': '\"100\"'\n  }\n})\nexport class BarComponent implements OnInit, OnDestroy {\n  max: number;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input()\n  get type(): string {\n    return this._type;\n  }\n\n  set type(v: string) {\n    this._type = v;\n    this.applyTypeClasses();\n  }\n\n  /** current value of progress bar */\n  @Input()\n  get value(): number {\n    return this._value;\n  }\n\n  set value(v: number) {\n    if (!v && v !== 0) {\n      return;\n    }\n    this._value = v;\n    this.recalculatePercentage();\n  }\n\n  @HostBinding('style.width.%')\n  get setBarWidth() {\n    this.recalculatePercentage();\n\n    return this.percent;\n  }\n\n  @HostBinding('class.progress-bar') addClass = true;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  striped: boolean;\n  animate: boolean;\n  percent = 0;\n  progress: ProgressbarComponent;\n\n  protected _value: number;\n  protected _type: string;\n  private _prevType: string;\n\n  constructor(\n    private el: ElementRef,\n    @Host() progress: ProgressbarComponent,\n    private renderer: Renderer2\n  ) {\n    this.progress = progress;\n  }\n\n  ngOnInit(): void {\n    this.progress.addBar(this);\n  }\n\n  ngOnDestroy(): void {\n    this.progress.removeBar(this);\n  }\n\n  recalculatePercentage(): void {\n    this.percent = +(this.value / this.progress.max * 100).toFixed(2);\n\n    const totalPercentage = this.progress.bars\n      .reduce(function (total: number, bar: BarComponent): number {\n        return total + bar.percent;\n      }, 0);\n\n    if (totalPercentage > 100) {\n      this.percent -= totalPercentage - 100;\n    }\n  }\n\n  private applyTypeClasses(): void {\n    if (this._prevType) {\n      const barTypeClass = `progress-bar-${this._prevType}`;\n      const bgClass = `bg-${this._prevType}`;\n      this.renderer.removeClass(this.el.nativeElement, barTypeClass);\n      this.renderer.removeClass(this.el.nativeElement, bgClass);\n      this._prevType = null;\n    }\n\n    if (this._type) {\n      const barTypeClass = `progress-bar-${this._type}`;\n      const bgClass = `bg-${this._type}`;\n      this.renderer.addClass(this.el.nativeElement, barTypeClass);\n      this.renderer.addClass(this.el.nativeElement, bgClass);\n      this._prevType = this._type;\n    }\n  }\n}\n","<ng-content></ng-content>\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\nimport { ProgressbarComponent } from './progressbar.component';\nimport { ProgressbarConfig } from './progressbar.config';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BarComponent, ProgressbarComponent],\n  exports: [BarComponent, ProgressbarComponent]\n})\nexport class ProgressbarModule {\n  static forRoot(): ModuleWithProviders<ProgressbarModule> {\n    return { ngModule: ProgressbarModule, providers: [ProgressbarConfig] };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵprojection","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵtext","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate"],"mappings":"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"}