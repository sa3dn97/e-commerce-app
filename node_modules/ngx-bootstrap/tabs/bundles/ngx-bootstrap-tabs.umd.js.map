{"version":3,"file":"ngx-bootstrap-tabs.umd.js","sources":["ng://ngx-bootstrap/tabs/ng-transclude.directive.ts","ng://ngx-bootstrap/tabs/tabset.config.ts","ng://ngx-bootstrap/tabs/tabset.component.html","ng://ngx-bootstrap/tabs/tabset.component.ts","ng://ngx-bootstrap/tabs/tab.directive.ts","ng://ngx-bootstrap/tabs/tab-heading.directive.ts","ng://ngx-bootstrap/tabs/tabs.module.ts"],"sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngTransclude]'\n})\nexport class NgTranscludeDirective {\n  viewRef: ViewContainerRef;\n\n  protected _viewRef: ViewContainerRef;\n  /* tslint:disable-next-line:no-any */\n  protected _ngTransclude: TemplateRef<any>;\n\n  @Input()\n  /* tslint:disable-next-line:no-any */\n  set ngTransclude(templateRef: TemplateRef<any>) {\n    this._ngTransclude = templateRef;\n    if (templateRef) {\n      this.viewRef.createEmbeddedView(templateRef);\n    }\n  }\n\n  /* tslint:disable-next-line:no-any */\n  get ngTransclude(): TemplateRef<any> {\n    return this._ngTransclude;\n  }\n\n  constructor(viewRef: ViewContainerRef) {\n    this.viewRef = viewRef;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TabsetConfig {\n  /** provides default navigation context class: 'tabs' or 'pills' */\n  type = 'tabs';\n  /** provides possibility to set keyNavigations enable or disable, by default is enable */\n  isKeysAllowed = true;\n  /** aria label for tab list */\n  ariaLabel = 'Tabs';\n}\n","<ul class=\"nav\" [ngClass]=\"classMap\"\n    (click)=\"$event.preventDefault()\"\n    [attr.aria-label]=\"ariaLabel\"\n    role=\"tablist\">\n  <li *ngFor=\"let tabz of tabs; let i = index\" [ngClass]=\"['nav-item', tabz.customClass || '']\"\n      [class.active]=\"tabz.active\" [class.disabled]=\"tabz.disabled\" (keydown)=\"keyNavActions($event, i)\">\n    <a href=\"javascript:void(0);\" class=\"nav-link\" role=\"tab\"\n       [attr.aria-controls]=\"tabz.id ? tabz.id : ''\"\n       [attr.aria-selected]=\"!!tabz.active\"\n       [attr.id]=\"tabz.id ? tabz.id + '-link' : ''\"\n       [class.active]=\"tabz.active\" [class.disabled]=\"tabz.disabled\"\n       (click)=\"tabz.active = true\">\n      <span [ngTransclude]=\"tabz.headingRef\">{{ tabz.heading }}</span>\n      <span *ngIf=\"tabz.removable\" (click)=\"$event.preventDefault(); removeTab(tabz);\" class=\"bs-remove-tab\"> &#10060;</span>\n    </a>\n  </li>\n</ul>\n<div class=\"tab-content\">\n  <ng-content></ng-content>\n</div>\n","import { Component, HostBinding, Input, OnDestroy, Renderer2, ElementRef } from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\nimport { TabsetConfig } from './tabset.config';\n// todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\n@Component({\n  selector: 'tabset',\n  templateUrl: './tabset.component.html',\n  styleUrls: ['./tabs.scss']\n})\nexport class TabsetComponent implements OnDestroy {\n  /** if true tabs will be placed vertically */\n  @Input()\n  get vertical(): boolean {\n    return this._vertical;\n  }\n  set vertical(value: boolean) {\n    this._vertical = value;\n    this.setClassMap();\n  }\n\n  /** if true tabs fill the container and have a consistent width */\n  @Input()\n  get justified(): boolean {\n    return this._justified;\n  }\n  set justified(value: boolean) {\n    this._justified = value;\n    this.setClassMap();\n  }\n\n  /** navigation context class: 'tabs' or 'pills' */\n  @Input()\n  get type(): string {\n    return this._type;\n  }\n  set type(value: string) {\n    this._type = value;\n    this.setClassMap();\n  }\n\n  get isKeysAllowed(): boolean {\n    return this._isKeysAllowed;\n  }\n\n  set isKeysAllowed(value: boolean) {\n    this._isKeysAllowed = value;\n  }\n\n\n  @HostBinding('class.tab-container') clazz = true;\n\n  tabs: TabDirective[] = [];\n  classMap: { [key: string]: boolean } = {};\n\n  /** aria label for tab list */\n  ariaLabel: string;\n\n  protected isDestroyed: boolean;\n  protected _vertical: boolean;\n  protected _justified: boolean;\n  protected _type: string;\n  protected _isKeysAllowed: boolean;\n\n  constructor(\n    config: TabsetConfig,\n    private renderer: Renderer2,\n    private elementRef: ElementRef\n  ) {\n    Object.assign(this, config);\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed = true;\n  }\n\n  addTab(tab: TabDirective): void {\n    this.tabs.push(tab);\n    tab.active = this.tabs.length === 1 && typeof tab.active === 'undefined';\n  }\n\n  removeTab(\n    tab: TabDirective,\n    options = { reselect: true, emit: true }\n  ): void {\n    const index = this.tabs.indexOf(tab);\n    if (index === -1 || this.isDestroyed) {\n      return;\n    }\n    // Select a new tab if the tab to be removed is selected and not destroyed\n    if (options.reselect && tab.active && this.hasAvailableTabs(index)) {\n      const newActiveIndex = this.getClosestTabIndex(index);\n      this.tabs[newActiveIndex].active = true;\n    }\n    if (options.emit) {\n      tab.removed.emit(tab);\n    }\n    this.tabs.splice(index, 1);\n    if (tab.elementRef.nativeElement.parentNode) {\n      this.renderer.removeChild(\n        tab.elementRef.nativeElement.parentNode,\n        tab.elementRef.nativeElement\n      );\n    }\n  }\n\n  /* tslint:disable-next-line: cyclomatic-complexity */\n  keyNavActions(event: KeyboardEvent, index: number) {\n    if (!this.isKeysAllowed) {\n      return;\n    }\n    const list: HTMLElement[] = Array.from(this.elementRef.nativeElement.querySelectorAll('.nav-link'));\n    // const activeElList = list.filter((el: HTMLElement) => !el.classList.contains('disabled'));\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n      event.preventDefault();\n      const currentTab = list[(index) % list.length];\n      currentTab.click();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 39 || event.key === 'RightArrow') {\n      let nextTab: any;\n      let shift = 1;\n\n      do {\n        nextTab = list[(index + shift) % list.length];\n\n        shift++;\n      } while (nextTab.classList.contains('disabled'));\n\n      nextTab.focus();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 37 || event.key === 'LeftArrow') {\n      let previousTab: any;\n      let shift = 1;\n      let i = index;\n\n      do {\n        if ((i - shift) < 0) {\n          i = list.length - 1;\n          previousTab = list[i];\n          shift = 0;\n        } else {\n          previousTab = list[i - shift];\n        }\n\n        shift++;\n      } while (previousTab.classList.contains('disabled'));\n\n      previousTab.focus();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 36 || event.key === 'Home') {\n      event.preventDefault();\n\n      let firstTab: any;\n      let shift = 0;\n\n      do {\n        firstTab = list[shift % list.length];\n\n        shift++;\n      } while (firstTab.classList.contains('disabled'));\n\n      firstTab.focus();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 35 || event.key === 'End') {\n      event.preventDefault();\n\n      let lastTab: any;\n      let shift = 1;\n      let i = index;\n\n      do {\n        if ((i - shift) < 0) {\n          i = list.length - 1;\n          lastTab = list[i];\n          shift = 0;\n        } else {\n          lastTab = list[i - shift];\n        }\n\n        shift++;\n      } while (lastTab.classList.contains('disabled'));\n\n      lastTab.focus();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 46 || event.key === 'Delete') {\n      if (this.tabs[index].removable) {\n        this.removeTab(this.tabs[index]);\n\n        if (list[index + 1]) {\n          list[(index + 1) % list.length].focus();\n\n          return;\n        }\n\n        if (list[list.length - 1]) {\n          list[0].focus();\n        }\n      }\n    }\n  }\n\n  protected getClosestTabIndex(index: number): number {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return -1;\n    }\n\n    for (let step = 1; step <= tabsLength; step += 1) {\n      const prevIndex = index - step;\n      const nextIndex = index + step;\n      if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n        return prevIndex;\n      }\n      if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n        return nextIndex;\n      }\n    }\n\n    return -1;\n  }\n\n  protected hasAvailableTabs(index: number): boolean {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return false;\n    }\n\n    for (let i = 0; i < tabsLength; i += 1) {\n      if (!this.tabs[i].disabled && i !== index) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  protected setClassMap(): void {\n    this.classMap = {\n      'nav-stacked': this.vertical,\n      'flex-column': this.vertical,\n      'nav-justified': this.justified,\n      [`nav-${this.type}`]: true\n    };\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  TemplateRef,\n  OnInit,\n  OnDestroy,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport { TabsetComponent } from './tabset.component';\n\n@Directive({ selector: 'tab, [tab]' })\nexport class TabDirective implements OnInit, OnDestroy {\n  /** tab header text */\n  @Input() heading: string;\n  /** tab id. The same id with suffix '-link' will be added to the corresponding &lt;li&gt; element  */\n  @HostBinding('attr.id')\n  @Input() id: string;\n  /** if true tab can not be activated */\n  @Input() disabled: boolean;\n  /** if true tab can be removable, additional button will appear */\n  @Input() removable: boolean;\n  /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\n  @Input()\n  get customClass(): string {\n    return this._customClass;\n  }\n\n  set customClass(customClass: string) {\n    if (this.customClass) {\n      this.customClass.split(' ').forEach((cssClass: string) => {\n        this.renderer.removeClass(this.elementRef.nativeElement, cssClass);\n      });\n    }\n\n    this._customClass = customClass ? customClass.trim() : null;\n\n    if (this.customClass) {\n      this.customClass.split(' ').forEach((cssClass: string) => {\n        this.renderer.addClass(this.elementRef.nativeElement, cssClass);\n      });\n    }\n  }\n\n  /** tab active state toggle */\n  @HostBinding('class.active')\n  @Input()\n  get active(): boolean {\n    return this._active;\n  }\n\n  set active(active: boolean) {\n    if (this._active === active) {\n      return;\n    }\n    if ((this.disabled && active) || !active) {\n      if (this._active && !active) {\n        this.deselect.emit(this);\n        this._active = active;\n      }\n\n      return;\n    }\n\n    this._active = active;\n    this.selectTab.emit(this);\n    this.tabset.tabs.forEach((tab: TabDirective) => {\n      if (tab !== this) {\n        tab.active = false;\n      }\n    });\n  }\n\n  /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n  @Output() selectTab: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n  @Output() deselect: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\n  @Output() removed: EventEmitter<TabDirective> = new EventEmitter();\n\n  @HostBinding('class.tab-pane') addClass = true;\n  @HostBinding('attr.role') role = 'tabpanel';\n  @HostBinding('attr.aria-labelledby') get ariaLabelledby(): string {\n    return this.id ? `${this.id}-link` : '';\n  }\n\n  /* tslint:disable-next-line:no-any */\n  headingRef: TemplateRef<any>;\n  tabset: TabsetComponent;\n  protected _active: boolean;\n  protected _customClass: string;\n\n  constructor(\n    tabset: TabsetComponent,\n    public elementRef: ElementRef,\n    public renderer: Renderer2\n  ) {\n    this.tabset = tabset;\n    this.tabset.addTab(this);\n  }\n\n  ngOnInit(): void {\n    this.removable = this.removable;\n  }\n\n  ngOnDestroy(): void {\n    this.tabset.removeTab(this, { reselect: false, emit: false });\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\n\n/** Should be used to mark <ng-template> element as a template for tab heading */\n@Directive({ selector: '[tabHeading]' })\nexport class TabHeadingDirective {\n  /* tslint:disable-next-line:no-any */\n  templateRef: TemplateRef<any>;\n\n  /* tslint:disable-next-line:no-any */\n  constructor(templateRef: TemplateRef<any>, tab: TabDirective) {\n    tab.headingRef = templateRef;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { NgTranscludeDirective } from './ng-transclude.directive';\nimport { TabHeadingDirective } from './tab-heading.directive';\nimport { TabDirective } from './tab.directive';\nimport { TabsetComponent } from './tabset.component';\nimport { TabsetConfig } from './tabset.config';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    NgTranscludeDirective,\n    TabDirective,\n    TabsetComponent,\n    TabHeadingDirective\n  ],\n  exports: [\n    TabDirective,\n    TabsetComponent,\n    TabHeadingDirective,\n    NgTranscludeDirective\n  ]\n})\nexport class TabsModule {\n  static forRoot(): ModuleWithProviders<TabsModule> {\n    return {\n      ngModule: TabsModule,\n      providers: [TabsetConfig]\n    };\n  }\n}\n"],"names":["Directive","Input","Injectable","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵtemplate","i0.ɵɵclassProp","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵattribute","i0.ɵɵtextInterpolate","i0.ɵɵprojection","Component","HostBinding","EventEmitter","Output","CommonModule","NgModule"],"mappings":"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"}