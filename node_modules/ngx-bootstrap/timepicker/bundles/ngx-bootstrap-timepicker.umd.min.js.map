{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-bootstrap/timepicker/reducer/timepicker.actions.ts","ng://ngx-bootstrap/timepicker/timepicker.utils.ts","ng://ngx-bootstrap/timepicker/timepicker-controls.util.ts","ng://ngx-bootstrap/timepicker/timepicker.config.ts","ng://ngx-bootstrap/timepicker/reducer/timepicker.reducer.ts","ng://ngx-bootstrap/timepicker/reducer/timepicker.store.ts","ng://ngx-bootstrap/timepicker/timepicker.component.ts","ng://ngx-bootstrap/timepicker/timepicker.component.html","ng://ngx-bootstrap/timepicker/timepicker.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","TimepickerActions","prototype","writeValue","value","type","WRITE_VALUE","payload","changeHours","event","CHANGE_HOURS","changeMinutes","CHANGE_MINUTES","changeSeconds","CHANGE_SECONDS","setTime","SET_TIME_UNIT","updateControls","UPDATE_CONTROLS","t","factory","ɵfac","isValidDate","Date","isNaN","getHours","isValidLimit","controls","newDate","min","max","toNumber","parseInt","parseHours","isPM","hour","NaN","parseMinutes","minute","parseSeconds","seconds","parseTime","changeTime","diff","createDate","minutes","getMinutes","getSeconds","opts","hours","newValue","getFullYear","getMonth","getDate","getMilliseconds","setFullYear","setMonth","setDate","padNumber","_value","toString","length","isHourInputValid","isMinuteInputValid","isSecondInputValid","isInputValid","canChangeValue","state","readonlyInput","disabled","source","mousewheel","arrowkeys","getControlsValue","hourStep","minuteStep","secondsStep","showSpinners","showMeridian","showSeconds","meridians","TimepickerConfig","this","showMinutes","hoursPlaceholder","minutesPlaceholder","secondsPlaceholder","ariaLabelHours","ariaLabelMinutes","ariaLabelSeconds","initialState","config","canIncrementHours","canIncrementMinutes","canIncrementSeconds","canDecrementHours","canDecrementMinutes","canDecrementSeconds","canToggleMeridian","timepickerReducer","action","assign","step","_newTime","canChangeMinutes","canChangeSeconds","_newControlsState","res","_newHour","_newMinutes","_newSeconds","timepickerControls","_newState","TimepickerStore","_dispatcher","BehaviorSubject","MiniState","_super","call","__","constructor","create","__extends","MiniStore","TimepickerComponent_td_6_Template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵlistener","i0.ɵɵelement","i0.ɵɵadvance","i0.ɵɵclassProp","core","_r61","ctx_r62","ctx_r63","$event","updateMinutes","target","i0.ɵɵproperty","ctx_r45","i0.ɵɵattribute","_r66","ctx_r67","ctx_r68","updateSeconds","ctx_r47","i0.ɵɵtextInterpolate1","ctx_r72","ctx_r74","TIMEPICKER_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","TimepickerComponent","multi","_config","_cd","_store","_timepickerActions","_this","isValid","EventEmitter","invalidHours","invalidMinutes","invalidSeconds","onChange","Function","onTouched","timepickerSub","select","subscribe","_renderTime","dispatch","controlsState","emit","markForCheck","defineProperty","resetValidation","meridian","prevDef","preventDefault","wheelSign","Math","sign","deltaY","ngOnChanges","changes","updateHours","_updateTime","_seconds","_minutes","toggleMeridian","isEditable","obj","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ngOnDestroy","unsubscribe","_hours","getUTCSeconds","ChangeDetectorRef","selectors","inputs","outputs","features","decls","vars","consts","template","i0.ɵɵtemplate","TimepickerModule","forRoot","ngModule","providers","imports","common","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Action } from 'ngx-bootstrap/mini-ngrx';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  Time\n} from '../timepicker.models';\n\n@Injectable()\nexport class TimepickerActions {\n  static readonly WRITE_VALUE = '[timepicker] write value from ng model';\n  static readonly CHANGE_HOURS = '[timepicker] change hours';\n  static readonly CHANGE_MINUTES = '[timepicker] change minutes';\n  static readonly CHANGE_SECONDS = '[timepicker] change seconds';\n  static readonly SET_TIME_UNIT = '[timepicker] set time unit';\n  static readonly UPDATE_CONTROLS = '[timepicker] update controls';\n\n  writeValue(value: Date | string) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n\n  changeHours(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n\n  changeMinutes(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n\n  changeSeconds(event: TimeChangeEvent): Action {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n\n  setTime(value: Time): Action {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n\n  updateControls(value: TimepickerComponentState): Action {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\n}\n","import { Time, TimepickerComponentState } from './timepicker.models';\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\n\nexport function isValidDate(value?: string | Date): boolean {\n  if (!value) {\n    return false;\n  }\n\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n\n  return true;\n}\n\nexport function isValidLimit(controls: TimepickerComponentState, newDate: Date): boolean {\n  if (controls.min && newDate < controls.min) {\n    return false;\n  }\n\n  if (controls.max && newDate > controls.max) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function toNumber(value: string | number): number {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, dex);\n}\n\nexport function isNumber(value: string | number): value is number {\n  return !isNaN(toNumber(value));\n}\n\nexport function parseHours(\n  value: string | number,\n  isPM = false\n): number {\n  const hour = toNumber(value);\n  if (\n    isNaN(hour) ||\n    hour < 0 ||\n    hour > (isPM ? hoursPerDayHalf : hoursPerDay)\n  ) {\n    return NaN;\n  }\n\n  return hour;\n}\n\nexport function parseMinutes(value: string | number): number {\n  const minute = toNumber(value);\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n\n  return minute;\n}\n\nexport function parseSeconds(value: string | number): number {\n  const seconds = toNumber(value);\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n\n  return seconds;\n}\n\nexport function parseTime(value: string | Date): Date {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n\n  return value;\n}\n\nexport function changeTime(value: Date, diff: Time): Date {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n\n  if (diff.hour) {\n    hour = hour + toNumber(diff.hour);\n  }\n\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n\n  return createDate(value, hour, minutes, seconds);\n}\n\nexport function setTime(value: Date, opts: Time): Date {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n\n  if (opts.isPM && hour !== 12) {\n    hour += hoursPerDayHalf;\n  }\n\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n\n    return value;\n  }\n\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n\n  return createDate(value, hour, minute, seconds);\n}\n\nexport function createDate(\n  value: Date,\n  hours: number,\n  minutes: number,\n  seconds: number\n): Date {\n  const newValue = new Date(\n    value.getFullYear(),\n    value.getMonth(),\n    value.getDate(),\n    hours,\n    minutes,\n    seconds,\n    value.getMilliseconds()\n  );\n  // #3139 ensure date part remains unchanged\n  newValue.setFullYear(value.getFullYear());\n  newValue.setMonth(value.getMonth());\n  newValue.setDate(value.getDate());\n\n  return newValue;\n}\n\nexport function padNumber(value: number): string {\n  const _value = value.toString();\n  if (_value.length > 1) {\n    return _value;\n  }\n\n  return `0${_value}`;\n}\n\nexport function isHourInputValid(hours: string, isPM: boolean): boolean {\n  return !isNaN(parseHours(hours, isPM));\n}\n\nexport function isMinuteInputValid(minutes: string): boolean {\n  return !isNaN(parseMinutes(minutes));\n}\n\nexport function isSecondInputValid(seconds: string): boolean {\n  return !isNaN(parseSeconds(seconds));\n}\n\nexport function isInputLimitValid(diff: Time, max: Date, min: Date): boolean {\n  const newDate = setTime(new Date(), diff);\n\n  if (max && newDate > max) {\n    return false;\n  }\n\n  if (min && newDate < min) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isInputValid(\n  hours: string,\n  minutes = '0',\n  seconds = '0',\n  isPM: boolean\n): boolean {\n  return isHourInputValid(hours, isPM)\n    && isMinuteInputValid(minutes)\n    && isSecondInputValid(seconds);\n}\n","import { changeTime } from './timepicker.utils';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\n\nexport function canChangeValue(\n  state: TimepickerComponentState,\n  event?: TimeChangeEvent\n): boolean {\n  if (state.readonlyInput || state.disabled) {\n    return false;\n  }\n\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function canChangeHours(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeMinutes(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeSeconds(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function getControlsValue(\n  state: TimepickerComponentState\n): TimepickerComponentState {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\n\nexport function timepickerControls(\n  value: Date,\n  state: TimepickerComponentState\n): TimepickerControls {\n  const hoursPerDayHalf = 12;\n  const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n  const res: TimepickerControls = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n\n    canToggleMeridian: true\n  };\n\n  if (!value) {\n    return res;\n  }\n\n  // compare dates\n  if (max) {\n    const _newHour = changeTime(value, { hour: hourStep });\n    res.canIncrementHours = max > _newHour;\n\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, { minute: minuteStep });\n      res.canIncrementMinutes = showSeconds\n        ? max > _newMinutes\n        : max >= _newMinutes;\n    }\n\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: secondsStep });\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n\n    if (value.getHours() < hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\n    }\n  }\n\n  if (min) {\n    const _newHour = changeTime(value, { hour: -hourStep });\n    res.canDecrementHours = min < _newHour;\n\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, { minute: -minuteStep });\n      res.canDecrementMinutes = showSeconds\n        ? min < _newMinutes\n        : min <= _newMinutes;\n    }\n\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: -secondsStep });\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n\n    if (value.getHours() >= hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\n    }\n  }\n\n  return res;\n}\n","import { Injectable } from '@angular/core';\n\n/** Provides default configuration values for timepicker */\n@Injectable()\nexport class TimepickerConfig {\n  /** hours change step */\n  hourStep = 1;\n  /** hours change step */\n  minuteStep = 5;\n  /** seconds changes step */\n  secondsStep = 10;\n  /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n  showMeridian = true;\n  /** meridian labels based on locale */\n  meridians = ['AM', 'PM'];\n  /** if true hours and minutes fields will be readonly */\n  readonlyInput = false;\n  /** if true hours and minutes fields will be disabled */\n  disabled = false;\n  /** if true scroll inside hours and minutes inputs will change time */\n  mousewheel = true;\n  /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n  arrowkeys = true;\n  /** if true spinner arrows above and below the inputs will be shown */\n  showSpinners = true;\n  /** show seconds in timepicker */\n  showSeconds = false;\n  /** show minutes in timepicker */\n  showMinutes = true;\n  /** minimum time user can select */\n  min: Date;\n  /** maximum time user can select */\n  max: Date;\n  /** placeholder for hours field in timepicker */\n  hoursPlaceholder = 'HH';\n  /** placeholder for minutes field in timepicker */\n  minutesPlaceholder = 'MM';\n  /** placeholder for seconds field in timepicker */\n  secondsPlaceholder = 'SS';\n  /** hours aria label */\n  ariaLabelHours = 'hours';\n  /** minutes aria label */\n  ariaLabelMinutes = 'minutes';\n  /** seconds aria label */\n  ariaLabelSeconds = 'seconds';\n}\n","import { Action } from 'ngx-bootstrap/mini-ngrx';\nimport {\n  canChangeHours,\n  canChangeMinutes,\n  canChangeSeconds,\n  canChangeValue,\n  timepickerControls\n} from '../timepicker-controls.util';\nimport { TimepickerConfig } from '../timepicker.config';\nimport {\n  TimepickerComponentState,\n  TimepickerControls\n} from '../timepicker.models';\nimport { changeTime, setTime, isValidLimit } from '../timepicker.utils';\nimport { TimepickerActions } from './timepicker.actions';\n\nexport class TimepickerState {\n  value: Date;\n  config: TimepickerComponentState;\n  controls: TimepickerControls;\n}\n\nexport const initialState: TimepickerState = {\n  value: null,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n\n    canToggleMeridian: true\n  }\n};\n\n// tslint:disable-next-line:cyclomatic-complexity\nexport function timepickerReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE: {\n      return Object.assign({}, state, { value: action.payload });\n    }\n\n    case TimepickerActions.CHANGE_HOURS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeHours(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { hour: action.payload.step });\n\n      if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n      }\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_MINUTES: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeMinutes(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { minute: action.payload.step });\n\n      if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n        return state;\n      }\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_SECONDS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeSeconds(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, {\n        seconds: action.payload.step\n      });\n\n      if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n        return state;\n      }\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.SET_TIME_UNIT: {\n      if (!canChangeValue(state.config)) {\n        return state;\n      }\n\n      const _newTime = setTime(state.value, action.payload);\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.UPDATE_CONTROLS: {\n      const _newControlsState = timepickerControls(state.value, action.payload);\n      const _newState: TimepickerState = {\n        value: state.value,\n        config: action.payload,\n        controls: _newControlsState\n      };\n\n      if (state.config.showMeridian !== _newState.config.showMeridian) {\n        if (state.value) {\n          _newState.value = new Date(state.value);\n        }\n      }\n\n      return Object.assign({}, state, _newState);\n    }\n\n    default:\n      return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  timepickerReducer,\n  TimepickerState,\n  initialState\n} from './timepicker.reducer';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Action, MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\n\n@Injectable()\nexport class TimepickerStore extends MiniStore<TimepickerState> {\n  constructor() {\n    const _dispatcher = new BehaviorSubject<Action>({\n      type: '[mini-ngrx] dispatcher init'\n    });\n    const state = new MiniState<TimepickerState>(\n      initialState,\n      _dispatcher,\n      timepickerReducer\n    );\n    super(_dispatcher, timepickerReducer, state);\n  }\n}\n","/* tslint:disable:no-forward-ref max-file-line-count */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges, ViewEncapsulation\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerStore } from './reducer/timepicker.store';\nimport { getControlsValue } from './timepicker-controls.util';\nimport { TimepickerConfig } from './timepicker.config';\n\nimport {\n  TimeChangeSource,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\n\nimport {\n  isValidDate,\n  padNumber,\n  parseTime,\n  isInputValid,\n  isHourInputValid,\n  isMinuteInputValid,\n  isSecondInputValid,\n  isInputLimitValid\n} from './timepicker.utils';\n\nimport { Subscription } from 'rxjs';\n\nimport { ControlValueAccessorModel } from './models';\n\nexport const TIMEPICKER_CONTROL_VALUE_ACCESSOR: ControlValueAccessorModel = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'timepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n  templateUrl: './timepicker.component.html',\n  styles: [`\n    .bs-chevron {\n      border-style: solid;\n      display: block;\n      width: 9px;\n      height: 9px;\n      position: relative;\n      border-width: 3px 0px 0 3px;\n    }\n\n    .bs-chevron-up {\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      top: 2px;\n    }\n\n    .bs-chevron-down {\n      -webkit-transform: rotate(-135deg);\n      transform: rotate(-135deg);\n      top: -2px;\n    }\n\n    .bs-timepicker-field {\n      width: 50px;\n      padding: .375rem .55rem;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TimepickerComponent\n  implements ControlValueAccessor,\n    TimepickerComponentState,\n    TimepickerControls,\n    OnChanges,\n    OnDestroy {\n  /** hours change step */\n  @Input() hourStep: number;\n  /** hours change step */\n  @Input() minuteStep: number;\n  /** seconds change step */\n  @Input() secondsStep: number;\n  /** if true hours and minutes fields will be readonly */\n  @Input() readonlyInput: boolean;\n  /** if true hours and minutes fields will be disabled */\n  @Input() disabled: boolean;\n  /** if true scroll inside hours and minutes inputs will change time */\n  @Input() mousewheel: boolean;\n  /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n  @Input() arrowkeys: boolean;\n  /** if true spinner arrows above and below the inputs will be shown */\n  @Input() showSpinners: boolean;\n  /** if true meridian button will be shown */\n  @Input() showMeridian: boolean;\n  /** show minutes in timepicker */\n  @Input() showMinutes: boolean;\n  /** show seconds in timepicker */\n  @Input() showSeconds: boolean;\n  /** meridian labels based on locale */\n  @Input() meridians: string[];\n  /** minimum time user can select */\n  @Input() min: Date;\n  /** maximum time user can select */\n  @Input() max: Date;\n  /** placeholder for hours field in timepicker */\n  @Input() hoursPlaceholder: string;\n  /** placeholder for minutes field in timepicker */\n  @Input() minutesPlaceholder: string;\n  /** placeholder for seconds field in timepicker */\n  @Input() secondsPlaceholder: string;\n\n  /** emits true if value is a valid date */\n  @Output() isValid = new EventEmitter<boolean>();\n\n  // ui variables\n  hours: string;\n  minutes: string;\n  seconds: string;\n  meridian: string;\n\n  /** @deprecated - please use `isEditable` instead */\n  get isSpinnersVisible(): boolean {\n    return this.showSpinners && !this.readonlyInput;\n  }\n\n  get isEditable(): boolean {\n    return !(this.readonlyInput || this.disabled);\n  }\n\n  // min\\max validation for input fields\n  invalidHours = false;\n  invalidMinutes = false;\n  invalidSeconds = false;\n\n  // aria-label variables\n  labelHours: string;\n  labelMinutes: string;\n  labelSeconds: string;\n\n  // time picker controls state\n  canIncrementHours: boolean;\n  canIncrementMinutes: boolean;\n  canIncrementSeconds: boolean;\n\n  canDecrementHours: boolean;\n  canDecrementMinutes: boolean;\n  canDecrementSeconds: boolean;\n\n  canToggleMeridian: boolean;\n\n  // control value accessor methods\n  // tslint:disable-next-line:no-any\n  onChange = Function.prototype;\n  // tslint:disable-next-line:no-any\n  onTouched = Function.prototype;\n\n  timepickerSub: Subscription;\n\n  constructor(\n    _config: TimepickerConfig,\n    private _cd: ChangeDetectorRef,\n    private _store: TimepickerStore,\n    private _timepickerActions: TimepickerActions\n  ) {\n    Object.assign(this, _config);\n\n    this.timepickerSub = _store\n      .select(state => state.value)\n      .subscribe((value: Date) => {\n        // update UI values if date changed\n        this._renderTime(value);\n        this.onChange(value);\n\n        this._store.dispatch(\n          this._timepickerActions.updateControls(getControlsValue(this))\n        );\n      });\n\n    _store\n      .select(state => state.controls)\n      .subscribe((controlsState: TimepickerControls) => {\n        this.isValid.emit(isInputValid(this.hours, this.minutes, this.seconds, this.isPM()));\n        Object.assign(this, controlsState);\n        _cd.markForCheck();\n      });\n  }\n\n  resetValidation(): void {\n    this.invalidHours = false;\n    this.invalidMinutes = false;\n    this.invalidSeconds = false;\n  }\n\n  isPM(): boolean {\n    return this.showMeridian && this.meridian === this.meridians[1];\n  }\n\n  prevDef($event: Event) {\n    $event.preventDefault();\n  }\n\n  wheelSign($event: WheelEventInit): number {\n    return Math.sign($event.deltaY) * -1;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._store.dispatch(\n      this._timepickerActions.updateControls(getControlsValue(this))\n    );\n  }\n\n  changeHours(step: number, source: TimeChangeSource = ''): void {\n    this.resetValidation();\n    this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n  }\n\n  changeMinutes(step: number, source: TimeChangeSource = ''): void {\n    this.resetValidation();\n    this._store.dispatch(\n      this._timepickerActions.changeMinutes({ step, source })\n    );\n  }\n\n  changeSeconds(step: number, source: TimeChangeSource = ''): void {\n    this.resetValidation();\n    this._store.dispatch(\n      this._timepickerActions.changeSeconds({ step, source })\n    );\n  }\n\n  updateHours(hours: string): void {\n    this.resetValidation();\n    this.hours = hours;\n\n    const isValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n\n    if (!isValid) {\n      this.invalidHours = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  updateMinutes(minutes: string) {\n    this.resetValidation();\n    this.minutes = minutes;\n\n    const isValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n\n    if (!isValid) {\n      this.invalidMinutes = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  updateSeconds(seconds: string) {\n    this.resetValidation();\n    this.seconds = seconds;\n\n    const isValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n\n    if (!isValid) {\n      this.invalidSeconds = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  isValidLimit(): boolean {\n    return isInputLimitValid({\n      hour: this.hours,\n      minute: this.minutes,\n      seconds: this.seconds,\n      isPM: this.isPM()\n    }, this.max, this.min);\n  }\n\n  _updateTime() {\n    const _seconds = this.showSeconds ? this.seconds : void 0;\n    const _minutes = this.showMinutes ? this.minutes : void 0;\n    if (!isInputValid(this.hours, _minutes, _seconds, this.isPM())) {\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._store.dispatch(\n      this._timepickerActions.setTime({\n        hour: this.hours,\n        minute: this.minutes,\n        seconds: this.seconds,\n        isPM: this.isPM()\n      })\n    );\n  }\n\n  toggleMeridian(): void {\n    if (!this.showMeridian || !this.isEditable) {\n      return;\n    }\n\n    const _hoursPerDayHalf = 12;\n    this._store.dispatch(\n      this._timepickerActions.changeHours({\n        step: _hoursPerDayHalf,\n        source: ''\n      })\n    );\n  }\n\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj: string | null | undefined | Date): void {\n    if (isValidDate(obj)) {\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n    } else if (obj == null) {\n      this._store.dispatch(this._timepickerActions.writeValue(null));\n    }\n  }\n\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  // tslint:disable-next-line:no-any\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * This function is called when the control status changes to or from \"disabled\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._cd.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this.timepickerSub.unsubscribe();\n  }\n\n  private _renderTime(value: string | Date): void {\n    if (!isValidDate(value)) {\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = this.meridians[0];\n\n      return;\n    }\n\n    const _value = parseTime(value);\n    const _hoursPerDayHalf = 12;\n    let _hours = _value.getHours();\n\n    if (this.showMeridian) {\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n      _hours = _hours % _hoursPerDayHalf;\n      // should be 12 PM, not 00 PM\n      if (_hours === 0) {\n        _hours = _hoursPerDayHalf;\n      }\n    }\n\n    this.hours = padNumber(_hours);\n    this.minutes = padNumber(_value.getMinutes());\n    this.seconds = padNumber(_value.getUTCSeconds());\n  }\n}\n","<table>\n  <tbody>\n  <tr class=\"text-center\" [hidden]=\"!showSpinners\">\n    <!-- increment hours button-->\n    <td>\n      <a class=\"btn btn-link\" [class.disabled]=\"!canIncrementHours || !isEditable\"\n         (click)=\"changeHours(hourStep)\"\n      ><span class=\"bs-chevron bs-chevron-up\"></span></a>\n    </td>\n    <!-- divider -->\n    <td *ngIf=\"showMinutes\">&nbsp;&nbsp;&nbsp;</td>\n    <!-- increment minutes button -->\n    <td *ngIf=\"showMinutes\">\n      <a class=\"btn btn-link\" [class.disabled]=\"!canIncrementMinutes || !isEditable\"\n         (click)=\"changeMinutes(minuteStep)\"\n      ><span class=\"bs-chevron bs-chevron-up\"></span></a>\n    </td>\n    <!-- divider -->\n    <td *ngIf=\"showSeconds\">&nbsp;</td>\n    <!-- increment seconds button -->\n    <td *ngIf=\"showSeconds\">\n      <a class=\"btn btn-link\" [class.disabled]=\"!canIncrementSeconds || !isEditable\"\n         (click)=\"changeSeconds(secondsStep)\">\n        <span class=\"bs-chevron bs-chevron-up\"></span>\n      </a>\n    </td>\n    <!-- space between -->\n    <td *ngIf=\"showMeridian\">&nbsp;&nbsp;&nbsp;</td>\n    <!-- meridian placeholder-->\n    <td *ngIf=\"showMeridian\"></td>\n  </tr>\n  <tr>\n    <!-- hours -->\n    <td class=\"form-group\" [class.has-error]=\"invalidHours\">\n      <input type=\"text\" [class.is-invalid]=\"invalidHours\"\n             class=\"form-control text-center bs-timepicker-field\"\n             [placeholder]=\"hoursPlaceholder\"\n             maxlength=\"2\"\n             [readonly]=\"readonlyInput\"\n             [disabled]=\"disabled\"\n             [value]=\"hours\"\n             (wheel)=\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\"\n             (keydown.ArrowUp)=\"changeHours(hourStep, 'key')\"\n             (keydown.ArrowDown)=\"changeHours(-hourStep, 'key')\"\n             (change)=\"updateHours($event.target.value)\" [attr.aria-label]=\"labelHours\"></td>\n    <!-- divider -->\n    <td *ngIf=\"showMinutes\">&nbsp;:&nbsp;</td>\n    <!-- minutes -->\n    <td class=\"form-group\" *ngIf=\"showMinutes\" [class.has-error]=\"invalidMinutes\">\n      <input type=\"text\" [class.is-invalid]=\"invalidMinutes\"\n             class=\"form-control text-center bs-timepicker-field\"\n             [placeholder]=\"minutesPlaceholder\"\n             maxlength=\"2\"\n             [readonly]=\"readonlyInput\"\n             [disabled]=\"disabled\"\n             [value]=\"minutes\"\n             (wheel)=\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\"\n             (keydown.ArrowUp)=\"changeMinutes(minuteStep, 'key')\"\n             (keydown.ArrowDown)=\"changeMinutes(-minuteStep, 'key')\"\n             (change)=\"updateMinutes($event.target.value)\" [attr.aria-label]=\"labelMinutes\">\n    </td>\n    <!-- divider -->\n    <td *ngIf=\"showSeconds\">&nbsp;:&nbsp;</td>\n    <!-- seconds -->\n    <td class=\"form-group\" *ngIf=\"showSeconds\" [class.has-error]=\"invalidSeconds\">\n      <input type=\"text\" [class.is-invalid]=\"invalidSeconds\"\n             class=\"form-control text-center bs-timepicker-field\"\n             [placeholder]=\"secondsPlaceholder\"\n             maxlength=\"2\"\n             [readonly]=\"readonlyInput\"\n             [disabled]=\"disabled\"\n             [value]=\"seconds\"\n             (wheel)=\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\"\n             (keydown.ArrowUp)=\"changeSeconds(secondsStep, 'key')\"\n             (keydown.ArrowDown)=\"changeSeconds(-secondsStep, 'key')\"\n             (change)=\"updateSeconds($event.target.value)\" [attr.aria-label]=\"labelSeconds\">\n    </td>\n    <!-- space between -->\n    <td *ngIf=\"showMeridian\">&nbsp;&nbsp;&nbsp;</td>\n    <!-- meridian -->\n    <td *ngIf=\"showMeridian\">\n      <button type=\"button\" class=\"btn btn-default text-center\"\n              [disabled]=\"!isEditable || !canToggleMeridian\"\n              [class.disabled]=\"!isEditable || !canToggleMeridian\"\n              (click)=\"toggleMeridian()\"\n      >{{ meridian }}\n      </button>\n    </td>\n  </tr>\n  <tr class=\"text-center\" [hidden]=\"!showSpinners\">\n    <!-- decrement hours button-->\n    <td>\n      <a class=\"btn btn-link\" [class.disabled]=\"!canDecrementHours || !isEditable\"\n         (click)=\"changeHours(-hourStep)\">\n        <span class=\"bs-chevron bs-chevron-down\"></span>\n      </a>\n    </td>\n    <!-- divider -->\n    <td *ngIf=\"showMinutes\">&nbsp;&nbsp;&nbsp;</td>\n    <!-- decrement minutes button-->\n    <td *ngIf=\"showMinutes\">\n      <a class=\"btn btn-link\" [class.disabled]=\"!canDecrementMinutes || !isEditable\"\n         (click)=\"changeMinutes(-minuteStep)\">\n        <span class=\"bs-chevron bs-chevron-down\"></span>\n      </a>\n    </td>\n    <!-- divider -->\n    <td *ngIf=\"showSeconds\">&nbsp;</td>\n    <!-- decrement seconds button-->\n    <td *ngIf=\"showSeconds\">\n      <a class=\"btn btn-link\" [class.disabled]=\"!canDecrementSeconds || !isEditable\"\n         (click)=\"changeSeconds(-secondsStep)\">\n        <span class=\"bs-chevron bs-chevron-down\"></span>\n      </a>\n    </td>\n    <!-- space between -->\n    <td *ngIf=\"showMeridian\">&nbsp;&nbsp;&nbsp;</td>\n    <!-- meridian placeholder-->\n    <td *ngIf=\"showMeridian\"></td>\n  </tr>\n  </tbody>\n</table>\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TimepickerComponent } from './timepicker.component';\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerConfig } from './timepicker.config';\nimport { TimepickerStore } from './reducer/timepicker.store';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TimepickerComponent],\n  exports: [TimepickerComponent]\n})\nexport class TimepickerModule {\n  static forRoot(): ModuleWithProviders<TimepickerModule> {\n    return {\n      ngModule: TimepickerModule,\n      providers: [TimepickerConfig, TimepickerActions, TimepickerStore]\n    };\n  }\n}\n"]}